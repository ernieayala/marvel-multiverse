{"version":3,"file":"marvel-multiverse.mjs","sources":["module/documents/actor.mjs","module/documents/item.mjs","module/helpers/effects.mjs","module/sheets/actor-sheet.mjs","module/sheets/item-sheet.mjs","module/helpers/templates.mjs","module/helpers/config.mjs","module/data/actor-base.mjs","module/data/character.mjs","module/data/npc.mjs","module/data/item-base.mjs","module/data/item.mjs","module/data/occupation.mjs","module/data/origin.mjs","module/data/tag.mjs","module/data/trait.mjs","module/data/power.mjs","module/dice/dietype/marvel-die.mjs","module/dice/dietype/six-sided-die.mjs","module/dice/roll.mjs","marvel-multiverse.mjs"],"sourcesContent":["/**\n * Extend the base Actor document by defining a custom roll data structure which is ideal for the Simple system.\n * @extends {Actor}\n */\nexport class MarvelMultiverseActor extends Actor {\n  /** @override */\n  prepareData() {\n    // Prepare data for the actor. Calling the super version of this executes\n    // the following, in order: data reset (to clear active effects),\n    // prepareBaseData(), prepareEmbeddedDocuments() (including active effects),\n    // prepareDerivedData().\n    super.prepareData();\n  }\n\n  /** @override */\n  prepareBaseData() {\n    // Data modifications in this step occur before processing embedded\n    // documents or derived data.\n  }\n\n  /**\n   * @override\n   * Augment the actor source data with additional dynamic data that isn't \n   * handled by the actor's DataModel. Data calculated in this step should be\n   * available both inside and outside of character sheets (such as if an actor\n   * is queried and has a roll executed directly from it).\n   */\n  prepareDerivedData() {\n    const actorData = this;\n    const flags = actorData.flags.MarvelMultiverse || {};\n  }\n\n  /**\n   * \n   * @override\n   * Augment the actor's default getRollData() method by appending the data object\n   * generated by the its DataModel's getRollData(), or null. This polymorphic \n   * approach is useful when you have actors & items that share a parent Document, \n   * but have slightly different data preparation needs.\n   */\n  getRollData() {\n    return { ...super.getRollData(), ...this.system.getRollData?.() ?? null };\n  }\n\n}\n","/**\n * Extend the basic Item with some very simple modifications.\n * @extends {Item}\n */\nexport class MarvelMultiverseItem extends Item {\n  /**\n   * Augment the basic Item data model with additional dynamic data.\n   */\n  prepareData() {\n    // As with the actor class, items are documents that can have their data\n    // preparation methods overridden (such as prepareBaseData()).\n    super.prepareData();\n  }\n\n  /**\n   * Prepare a data object which defines the data schema used by dice roll commands against this Item\n   * @override\n   */\n  getRollData() {\n    // Starts off by populating the roll data with `this.system`\n    const rollData = { ...super.getRollData() };\n\n    // Quit early if there's no parent actor\n    if (!this.actor) return rollData;\n\n    // If present, add the actor's roll data\n    rollData.actor = this.actor.getRollData();\n\n    return rollData;\n  }\n\n  /**\n   * Handle clickable rolls.\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  async roll() {\n    const item = this;\n\n    // Initialize chat data.\n    const speaker = ChatMessage.getSpeaker({ actor: this.actor });\n    const rollMode = game.settings.get('core', 'rollMode');\n    const label = `[${item.type}] ${item.name}`;\n\n    // If there's no roll data, send a chat message.\n    if (!this.system.formula) {\n      ChatMessage.create({\n        speaker: speaker,\n        rollMode: rollMode,\n        flavor: label,\n        content: item.system.description ?? '',\n      });\n    }\n    // Otherwise, create a roll and send a chat message from it.\n    else {\n      // Retrieve roll data.\n      const rollData = this.getRollData();\n\n      // Invoke the roll and submit it to chat.\n      const roll = new Roll(rollData.formula, rollData.actor);\n      // If you need to store the value first, uncomment the next line.\n      // const result = await roll.evaluate();\n      roll.toMessage({\n        speaker: speaker,\n        rollMode: rollMode,\n        flavor: label,\n      });\n      return roll;\n    }\n  }\n}\n","/**\n * Manage Active Effect instances through an Actor or Item Sheet via effect control buttons.\n * @param {MouseEvent} event      The left-click event on the effect control\n * @param {Actor|Item} owner      The owning document which manages this effect\n */\nexport function onManageActiveEffect(event, owner) {\n  event.preventDefault();\n  const a = event.currentTarget;\n  const li = a.closest('li');\n  const effect = li.dataset.effectId\n    ? owner.effects.get(li.dataset.effectId)\n    : null;\n  switch (a.dataset.action) {\n    case 'create':\n      return owner.createEmbeddedDocuments('ActiveEffect', [\n        {\n          name: game.i18n.format('DOCUMENT.New', {\n            type: game.i18n.localize('DOCUMENT.ActiveEffect'),\n          }),\n          icon: 'icons/svg/aura.svg',\n          origin: owner.uuid,\n          'duration.rounds':\n            li.dataset.effectType === 'temporary' ? 1 : undefined,\n          disabled: li.dataset.effectType === 'inactive',\n        },\n      ]);\n    case 'edit':\n      return effect.sheet.render(true);\n    case 'delete':\n      return effect.delete();\n    case 'toggle':\n      return effect.update({ disabled: !effect.disabled });\n  }\n}\n\n/**\n * Prepare the data structure for Active Effects which are currently embedded in an Actor or Item.\n * @param {ActiveEffect[]} effects    A collection or generator of Active Effect documents to prepare sheet data for\n * @return {object}                   Data for rendering\n */\nexport function prepareActiveEffectCategories(effects) {\n  // Define effect header categories\n  const categories = {\n    temporary: {\n      type: 'temporary',\n      label: game.i18n.localize('MARVEL_MULTIVERSE.Effect.Temporary'),\n      effects: [],\n    },\n    passive: {\n      type: 'passive',\n      label: game.i18n.localize('MARVEL_MULTIVERSE.Effect.Passive'),\n      effects: [],\n    },\n    inactive: {\n      type: 'inactive',\n      label: game.i18n.localize('MARVEL_MULTIVERSE.Effect.Inactive'),\n      effects: [],\n    },\n  };\n\n  // Iterate over active effects, classifying them into categories\n  for (let e of effects) {\n    if (e.disabled) categories.inactive.effects.push(e);\n    else if (e.isTemporary) categories.temporary.effects.push(e);\n    else categories.passive.effects.push(e);\n  }\n  return categories;\n}\n","import {\n  onManageActiveEffect,\n  prepareActiveEffectCategories,\n} from '../helpers/effects.mjs';\n\n/**\n * Extend the basic ActorSheet with some very simple modifications\n * @extends {ActorSheet}\n */\nexport class MarvelMultiverseActorSheet extends ActorSheet {\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: ['marvel-multiverse', 'sheet', 'actor'],\n      width: 600,\n      height: 600,\n      tabs: [\n        {\n          navSelector: '.sheet-tabs',\n          contentSelector: '.sheet-body',\n          initial: 'traits',\n        },\n      ],\n    });\n  }\n\n  /** @override */\n  get template() {\n    return `systems/marvel-multiverse/templates/actor/actor-${this.actor.type}-sheet.hbs`;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  getData() {\n    // Retrieve the data structure from the base sheet. You can inspect or log\n    // the context variable to see the structure, but some key properties for\n    // sheets are the actor object, the data object, whether or not it's\n    // editable, the items array, and the effects array.\n    const context = super.getData();\n\n    // Use a safe clone of the actor data for further operations.\n    const actorData = context.data;\n\n    // Add the actor's data to context.data for easier access, as well as flags.\n    context.system = actorData.system;\n    context.flags = actorData.flags;\n\n    // Prepare character data and items.\n    if (actorData.type == 'character') {\n      this._prepareItems(context);\n      this._prepareCharacterData(context);\n    }\n\n    // Prepare NPC data and items.\n    if (actorData.type == 'npc') {\n      this._prepareItems(context);\n    }\n\n    // Add roll data for TinyMCE editors.\n    context.rollData = context.actor.getRollData();\n\n    // Prepare active effects\n    context.effects = prepareActiveEffectCategories(\n      // A generator that returns all effects stored on the actor\n      // as well as any items\n      this.actor.allApplicableEffects()\n    );\n\n    return context;\n  }\n\n  /**\n   * Organize and classify Items for Character sheets.\n   *\n   * @param {Object} actorData The actor to prepare.\n   *\n   * @return {undefined}\n   */\n  _prepareCharacterData(context) {\n    // Handle ability scores.\n    // for (let [k, v] of Object.entries(context.system.abilities)) {\n    //   v.label = game.i18n.localize(CONFIG.MARVEL_MULTIVERSE.abilities[k]) ?? k;\n    // }\n  }\n\n  /**\n   * Organize and classify Items for Character sheets.\n   *\n   * @param {Object} actorData The actor to prepare.\n   *\n   * @return {undefined}\n   */\n  _prepareItems(context) {\n    // Initialize containers.\n    const gear = [];\n    const traits = [];\n    const origins = [];\n    const tags = [];\n    const powers = {\n      \"Basic\": [],\n      \"Elemental Control\": [],\n      \"Illusion\": [],\n      \"Magic (Chaotic)\": [],\n      \"Magic (Cursed)\": [],\n      \"Magic (Sorcerous)\": [],\n      \"Martial Arts\": [],\n      \"Melee Weapons\": [],\n      \"Omniversal Travel (Dimensionol)\": [],\n      \"Omniversal Travel (Mulliversal)\": [],\n      \"Omniversal Travel (Time)\": [],\n      \"Phasing\": [],\n      \"Plasticity\": [],\n      \"Power Cantrol\": [],\n      \"Ranged Weapons\": [],\n      \"Resize\": [],\n      \"Shield Bearer\": [],\n      \"Spider-Powers\": [],\n      \"Super-Speed\": [],\n      \"Super-Strength\": [],\n      \"Tactics\": [],\n      \"Telekinesis\": [],\n      \"Telepathy\": [],\n      \"Teleportation\": [],\n      \"Weather Control\": [],\n    };\n\n    // Iterate through items, allocating to containers\n    for (let i of context.items) {\n      i.img = i.img || Item.DEFAULT_ICON;\n      // Append to gear.\n      if (i.type === 'item') {\n        gear.push(i);\n      }\n      // Append to traits.\n      else if (i.type === 'trait') {\n        traits.push(i);\n      }\n       // Append to tags.\n       else if (i.type === 'tag') {\n        tags.push(i);\n      }\n      // Append to tags.\n      else if (i.type === 'origin') {\n        origins.push(i);\n      }\n      // Append to powers.\n      else if (i.type === 'power') {\n        if (i.system.powerSet != undefined) {\n          powers[i.system.powerSet].push(i);\n        }\n      }\n    }\n\n    // Assign and return\n    context.gear = gear;\n    context.traits = traits;\n    context.tags = tags;\n    context.powers = powers;\n    context.origins = origins;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Render the item sheet for viewing/editing prior to the editable check.\n    html.on('click', '.item-edit', (ev) => {\n      const li = $(ev.currentTarget).parents('.item');\n      const item = this.actor.items.get(li.data('itemId'));\n      item.sheet.render(true);\n    });\n\n    // -------------------------------------------------------------\n    // Everything below here is only needed if the sheet is editable\n    if (!this.isEditable) return;\n\n    // Add Inventory Item\n    html.on('click', '.item-create', this._onItemCreate.bind(this));\n\n    // Delete Inventory Item\n    html.on('click', '.item-delete', (ev) => {\n      const li = $(ev.currentTarget).parents('.item');\n      const item = this.actor.items.get(li.data('itemId'));\n      item.delete();\n      li.slideUp(200, () => this.render(false));\n    });\n\n    // Active Effect management\n    html.on('click', '.effect-control', (ev) => {\n      const row = ev.currentTarget.closest('li');\n      const document =\n        row.dataset.parentId === this.actor.id\n          ? this.actor\n          : this.actor.items.get(row.dataset.parentId);\n      onManageActiveEffect(ev, document);\n    });\n\n    // Rollable abilities.\n    html.on('click', '.rollable', this._onRoll.bind(this));\n\n    // Drag events for macros.\n    if (this.actor.isOwner) {\n      let handler = (ev) => this._onDragStart(ev);\n      html.find('li.item').each((i, li) => {\n        if (li.classList.contains('inventory-header')) return;\n        li.setAttribute('draggable', true);\n        li.addEventListener('dragstart', handler, false);\n      });\n    }\n  }\n\n  /**\n   * Handle creating a new Owned Item for the actor using initial data defined in the HTML dataset\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  async _onItemCreate(event) {\n    event.preventDefault();\n    const header = event.currentTarget;\n    // Get the type of item to create.\n    const type = header.dataset.type;\n    // Grab any data associated with this control.\n    const data = duplicate(header.dataset);\n    // Initialize a default name.\n    const name = `New ${type.capitalize()}`;\n    // Prepare the item object.\n    const itemData = {\n      name: name,\n      type: type,\n      system: data,\n    };\n    // Remove the type from the dataset since it's in the itemData.type prop.\n    delete itemData.system['type'];\n\n    // Finally, create the item!\n    return await Item.create(itemData, { parent: this.actor });\n  }\n\n  /**\n   * Handle clickable rolls.\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onRoll(event) {\n    event.preventDefault();\n    const element = event.currentTarget;\n    const dataset = element.dataset;\n\n    // Handle item rolls.\n    if (dataset.rollType) {\n      if (dataset.rollType == 'item') {\n        const itemId = element.closest('.item').dataset.itemId;\n        const item = this.actor.items.get(itemId);\n        if (item) return item.roll();\n      }\n    }\n\n    // Handle rolls that supply the formula directly.\n    if (dataset.roll) {\n      let label = dataset.label ? `[ability] ${dataset.label}` : '';\n      let roll = new Roll(dataset.roll, this.actor.getRollData());\n      roll.toMessage({\n        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n        flavor: label,\n        rollMode: game.settings.get('core', 'rollMode'),\n      });\n      return roll;\n    }\n  }\n}\n","import {\n  onManageActiveEffect,\n  prepareActiveEffectCategories,\n} from '../helpers/effects.mjs';\n\n/**\n * Extend the basic ItemSheet with some very simple modifications\n * @extends {ItemSheet}\n */\nexport class MarvelMultiverseItemSheet extends ItemSheet {\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: ['marvel-multiverse', 'sheet', 'item'],\n      width: 520,\n      height: 480,\n      tabs: [\n        {\n          navSelector: '.sheet-tabs',\n          contentSelector: '.sheet-body',\n          initial: 'description',\n        },\n      ],\n    });\n  }\n\n  /** @override */\n  get template() {\n    const path = 'systems/marvel-multiverse/templates/item';\n    // Return a single sheet for all item types.\n    // return `${path}/item-sheet.hbs`;\n\n    // Alternatively, you could use the following return statement to do a\n    // unique item sheet by type, like `weapon-sheet.hbs`.\n    return `${path}/item-${this.item.type}-sheet.hbs`;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  getData() {\n    // Retrieve base data structure.\n    const context = super.getData();\n\n    // Use a safe clone of the item data for further operations.\n    const itemData = context.data;\n\n    // Retrieve the roll data for TinyMCE editors.\n    context.rollData = this.item.getRollData();\n\n    // Add the item's data to context.data for easier access, as well as flags.\n    context.system = itemData.system;\n    context.flags = itemData.flags;\n\n    // Prepare active effects for easier access\n    context.effects = prepareActiveEffectCategories(this.item.effects);\n\n    return context;\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.isEditable) return;\n\n    // Roll handlers, click handlers, etc. would go here.\n\n    // Active Effect management\n    html.on('click', '.effect-control', (ev) =>\n      onManageActiveEffect(ev, this.item)\n    );\n  }\n}\n","/**\n * Define a set of template paths to pre-load\n * Pre-loaded templates are compiled and cached for fast access when rendering\n * @return {Promise}\n */\nexport const preloadHandlebarsTemplates = async function () {\n  return loadTemplates([\n    // Actor partials.\n    'systems/marvel-multiverse/templates/actor/parts/actor-tags.hbs',\n    'systems/marvel-multiverse/templates/actor/parts/actor-traits.hbs',\n    'systems/marvel-multiverse/templates/actor/parts/actor-items.hbs',,\n    'systems/marvel-multiverse/templates/actor/parts/actor-details.hbs',\n    'systems/marvel-multiverse/templates/actor/parts/actor-origins.hbs',\n    'systems/marvel-multiverse/templates/actor/parts/actor-powers.hbs',\n    'systems/marvel-multiverse/templates/actor/parts/actor-effects.hbs',\n    // Item partials\n    'systems/marvel-multiverse/templates/item/parts/item-effects.hbs',\n  ]);\n};\n","export const MARVEL_MULTIVERSE = {};\n\n/**\n * The set of Ability Scores used within the system.\n * @type {Object}\n */\nMARVEL_MULTIVERSE.abilities = {\n  mel: 'MARVEL_MULTIVERSE.Ability.Mel.long',\n  agl: 'MARVEL_MULTIVERSE.Ability.Agl.long',\n  res: 'MARVEL_MULTIVERSE.Ability.Res.long',\n  vig: 'MARVEL_MULTIVERSE.Ability.Vig.long',\n  ego: 'MARVEL_MULTIVERSE.Ability.Ego.long',\n  log: 'MARVEL_MULTIVERSE.Ability.Log.long',\n};\n\nMARVEL_MULTIVERSE.abilityAbbreviations = {\n  mel: 'MARVEL_MULTIVERSE.Ability.Mel.abbr',\n  agl: 'MARVEL_MULTIVERSE.Ability.Agl.abbr',\n  res: 'MARVEL_MULTIVERSE.Ability.Res.abbr',\n  vig: 'MARVEL_MULTIVERSE.Ability.Vig.abbr',\n  ego: 'MARVEL_MULTIVERSE.Ability.Ego.abbr',\n  log: 'MARVEL_MULTIVERSE.Ability.Log.abbr',\n};\n\nMARVEL_MULTIVERSE.MARVEL_RESULTS = {\n  1: { label: \"MARVEL_MULTIVERSE.MarvelResult.M\", image: `systems/marvel-multiverse/icons/marvel-1.svg`},\n  2: { label: \"MARVEL_MULTIVERSE.MarvelResult.2\", image: `systems/marvel-multiverse/icons/marvel-2.svg`},\n  3: { label: \"MARVEL_MULTIVERSE.MarvelResult.3\", image: `systems/marvel-multiverse/icons/marvel-3.svg`},\n  4: { label: \"MARVEL_MULTIVERSE.MarvelResult.4\", image: `systems/marvel-multiverse/icons/marvel-4.svg`},\n  5: { label: \"MARVEL_MULTIVERSE.MarvelResult.5\", image: `systems/marvel-multiverse/icons/marvel-5.svg`},\n  6: { label: \"MARVEL_MULTIVERSE.MarvelResult.6\", image: `systems/marvel-multiverse/icons/marvel-6.svg`},\n};\n\n\nMARVEL_MULTIVERSE.DICE_RESULTS = {\n  1: { label: \"MARVEL_MULTIVERSE.DiceResult.1\", image: `systems/marvel-multiverse/icons/1.svg`},\n  2: { label: \"MARVEL_MULTIVERSE.DiceResult.2\", image: `systems/marvel-multiverse/icons/2.svg`},\n  3: { label: \"MARVEL_MULTIVERSE.DiceResult.3\", image: `systems/marvel-multiverse/icons/3.svg`},\n  4: { label: \"MARVEL_MULTIVERSE.DiceResult.4\", image: `systems/marvel-multiverse/icons/4.svg`},\n  5: { label: \"MARVEL_MULTIVERSE.DiceResult.5\", image: `systems/marvel-multiverse/icons/5.svg`},\n  6: { label: \"MARVEL_MULTIVERSE.DiceResult.6\", image: `systems/marvel-multiverse/icons/6.svg`},\n}","export default class MarvelMultiverseActorBase extends foundry.abstract.TypeDataModel {\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    const requiredInteger = { required: true, nullable: false, integer: true };\n    const schema = {};\n\n    schema.health = new fields.SchemaField({\n      value: new fields.NumberField({ ...requiredInteger, initial: 10, min: 0 }),\n      max: new fields.NumberField({ ...requiredInteger, initial: 10 })\n    });\n    schema.focus = new fields.SchemaField({\n      value: new fields.NumberField({ ...requiredInteger, initial: 5, min: 0 }),\n      max: new fields.NumberField({ ...requiredInteger, initial: 5 })\n    });\n    schema.karma = new fields.SchemaField({\n      value: new fields.NumberField({ ...requiredInteger, initial: 5, min: 0 }),\n      max: new fields.NumberField({ ...requiredInteger, initial: 5 })\n    });\n\n    schema.codename = new fields.StringField({ required: true, blank: true }); // equivalent to passing ({initial: \"\"}) for StringFields\n    schema.realname = new fields.StringField({ required: true, blank: true }); // equivalent to passing ({initial: \"\"}) for StringFields\n    schema.height = new fields.StringField({ required: true, blank: true }); // equivalent to passing ({initial: \"\"}) for StringFields\n    schema.weight = new fields.StringField({ required: true, blank: true }); // equivalent to passing ({initial: \"\"}) for StringFields\n    schema.gender = new fields.StringField({ required: true, blank: true }); // equivalent to passing ({initial: \"\"}) for StringFields\n    schema.eyes = new fields.StringField({ required: true, blank: true }); // equivalent to passing ({initial: \"\"}) for StringFields\n    schema.hair = new fields.StringField({ required: true, blank: true }); // equivalent to passing ({initial: \"\"}) for StringFields\n    schema.size = new fields.StringField({ required: true, initial: \"Average\" }); // equivalent to passing ({initial: \"\"}) for StringFields\n    schema.distinguishingFeatures = new fields.StringField({ required: true, blank: true }); // equivalent to passing ({initial: \"\"}) for StringFields\n    schema.teams = new fields.StringField({ required: true, blank: true }); // equivalent to passing ({initial: \"\"}) for StringFields\n    schema.history = new fields.StringField({ required: true, blank: true }); // equivalent to passing ({initial: \"\"}) for StringFields\n    schema.personality = new fields.StringField({ required: true, blank: true }); // equivalent to passing ({initial: \"\"}) for StringFields\n    \n    return schema;\n  }\n}","import MarvelMultiverseActorBase from \"./actor-base.mjs\";\n\nexport default class MarvelMultiverseCharacter extends MarvelMultiverseActorBase {\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    const requiredInteger = { required: true, nullable: false, integer: true };\n    const schema = super.defineSchema();\n\n    schema.attributes = new fields.SchemaField({\n      rank: new fields.SchemaField({\n        value: new fields.NumberField({ ...requiredInteger, initial: 1 })\n      }),\n    });\n\n    // Iterate over ability names and create a new SchemaField for each.\n    schema.abilities = new fields.SchemaField(Object.keys(CONFIG.MARVEL_MULTIVERSE.abilities).reduce((obj, ability) => {\n      obj[ability] = new fields.SchemaField({\n        value: new fields.NumberField({ ...requiredInteger, initial: 10, min: 0 }),\n        mod: new fields.NumberField({ ...requiredInteger, initial: 0, min: 0 }),\n        label: new fields.StringField({ required: true, blank: true })\n      });\n      return obj;\n    }, {}));\n\n    return schema;\n  }\n\n  prepareDerivedData() {\n    // Loop through ability scores, and add their modifiers to our sheet output.\n    for (const key in this.abilities) {\n      // Calculate the modifier using mmrpg rules.\n      this.abilities[key].mod = this.abilities[key].value;\n      // Handle ability label localization.\n      this.abilities[key].label = game.i18n.localize(CONFIG.MARVEL_MULTIVERSE.abilities[key]) ?? key;\n    }\n  }\n\n  getRollData() {\n    const data = {};\n\n    // Copy the ability scores to the top rank, so that rolls can use\n    // formulas like `@mel.mod + 4`.\n    if (this.abilities) {\n      for (let [k,v] of Object.entries(this.abilities)) {\n        data[k] = foundry.utils.deepClone(v);\n      }\n    }\n\n    data.rank = this.attributes.rank.value;\n\n    return data\n  }\n}","import MarvelMultiverseActorBase from \"./actor-base.mjs\";\n\nexport default class MarvelMultiverseNPC extends MarvelMultiverseActorBase {\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    const requiredInteger = { required: true, nullable: false, integer: true };\n    const schema = super.defineSchema();\n\n    schema.cr = new fields.NumberField({ ...requiredInteger, initial: 1, min: 0 });\n    schema.xp = new fields.NumberField({ ...requiredInteger, initial: 0, min: 0 });\n    \n    return schema\n  }\n\n  prepareDerivedData() {\n    this.xp = this.cr * this.cr * 100;\n  }\n}","export default class MarvelMultiverseItemBase extends foundry.abstract.TypeDataModel {\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    const schema = {};\n\n    schema.description = new fields.StringField({ required: true, blank: true });\n\n    return schema;\n  }\n}","import MarvelMultiverseItemBase from \"./item-base.mjs\";\n\nexport default class MarvelMultiverseItem extends MarvelMultiverseItemBase {\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    const requiredInteger = { required: true, nullable: false, integer: true };\n    const schema = super.defineSchema();\n\n    schema.quantity = new fields.NumberField({ ...requiredInteger, initial: 1, min: 1 });\n    schema.weight = new fields.NumberField({ required: true, nullable: false, initial: 0, min: 0 });\n\n    // Break down roll formula into three independent fields\n    schema.roll = new fields.SchemaField({\n      diceNum: new fields.NumberField({ ...requiredInteger, initial: 1, min: 1 }),\n      diceSize: new fields.StringField({ initial: \"d20\" }),\n      diceBonus: new fields.StringField({ initial: \"+@str.mod+ceil(@rank / 2)\" })\n    })\n\n    schema.formula = new fields.StringField({ blank: true });\n\n    return schema;\n  }\n\n  prepareDerivedData() {\n    // Build the formula dynamically using string interpolation\n    const roll = this.roll;\n\n    this.formula = `${roll.diceNum}${roll.diceSize}${roll.diceBonus}`\n  }\n}","import MarvelMultiverseItemBase from \"./item-base.mjs\";\n\nexport default class MarvelMultiverseOccupation extends MarvelMultiverseItemBase {}","import MarvelMultiverseItemBase from \"./item-base.mjs\";\n\nexport default class MarvelMultiverseOrigin extends MarvelMultiverseItemBase {\n    static defineSchema() {\n        const fields = foundry.data.fields;\n        const schema = super.defineSchema();\n    \n        schema.examples = new fields.StringField({ required: true, blank: true });\n        schema.suggestedOccupation = new fields.StringField({ required: true, blank: true });\n\n        return schema;\n    }\n}","import MarvelMultiverseItemBase from \"./item-base.mjs\";\n\nexport default class MarvelMultiverseTag extends MarvelMultiverseItemBase {\n    static defineSchema() {\n        const fields = foundry.data.fields;\n        const schema = super.defineSchema();\n    \n        schema.restriction = new fields.StringField({ required: true, blank: true });\n        schema.rarity = new fields.StringField({ required: true, blank: true });\n      \n        return schema;\n      }\n}","import MarvelMultiverseItemBase from \"./item-base.mjs\";\n\nexport default class MarvelMultiverseTrait extends MarvelMultiverseItemBase {}","import MarvelMultiverseItemBase from \"./item-base.mjs\";\n\nexport default class MarvelMultiversePower extends MarvelMultiverseItemBase {\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    const schema = super.defineSchema();\n\n    schema.powerSet = new fields.StringField({ required: true, initial: \"Basic\" });\n    schema.prerequisites = new fields.StringField({ blank: true });\n    schema.action = new fields.StringField({ blank: true });\n    schema.trigger = new fields.StringField({ blank: true });\n    schema.duration = new fields.StringField({ blank: true });\n    schema.range = new fields.StringField({ blank: true });\n    schema.cost = new fields.StringField({ blank: true });\n    schema.effect = new fields.StringField({ blank: true });\n    \n    return schema;\n  }\n}","/**\n * Establish each MMRPG dice type here as extensions of DiceTerm.\n * @extends {DiceTerm}\n */\nexport class MarvelDie extends DiceTerm {\n      \n    constructor(termData) {\n        super(termData);\n        this.faces = 6;\n    }\n\n    /* -------------------------------------------- */\n    /** @override */\n    static DENOMINATION = \"m\";\n\n    /** @inheritdoc */\n    static MODIFIERS = {\n        \"r\": Die.prototype.reroll,\n        \"rr\": Die.prototype.rerollRecursive,\n        \"k\": Die.prototype.keep,\n        \"kh\": Die.prototype.keep,\n        \"kl\": Die.prototype.keep,\n        \"d\": Die.prototype.drop,\n        \"dh\": Die.prototype.drop,\n        \"dl\": Die.prototype.drop\n    }\n\n    /* -------------------------------------------- */\n    /** @override */\n    get formula() {\n        return `${this.number}${this.constructor.DENOMINATION}${this.modifiers.join(\"\")}`;\n    }\n\n    /* -------------------------------------------- */\n    /** @override */\n    evaluate({ minimize = false, maximize = false } = {}) {\n        if (this._evaluated) {\n            throw new Error(`This ${this.constructor.name} has already been evaluated and is immutable`);\n        }\n\n        // Roll the initial number of dice\n        for (let n = 1; n <= this.number; n++) {\n            this.roll({ minimize, maximize });\n        }\n\n        // Apply modifiers\n        this._evaluateModifiers();\n        this.results.forEach((result) => {\n            if(result.result === 1){\n                result.count = 6\n            }\n        })\n        this._evaluated = true;\n        this._isMarvel = true;\n        return this;\n    }\n\n    /* -------------------------------------------- */\n    /** @override */\n    roll(options) {\n        const roll = super.roll(options);\n        roll.MARVEL_MULTIVERSE = CONFIG.MARVEL_MULTIVERSE.MARVEL_RESULTS[roll.result];\n        return roll;\n    }\n\n    /* -------------------------------------------- */\n    /** @override */\n    getResultLabel(result) {\n        const die = CONFIG.MARVEL_MULTIVERSE.MARVEL_RESULTS[result.result];\n        return `<img src='${die.image}' title='${game.i18n.localize(die.label)}' alt=''/>`;\n    }\n}","/**\n * Establish each MMRPG dice type here as extensions of DiceTerm.\n * @extends {DiceTerm}\n */\nexport class SixSidedDie extends DiceTerm {\n      \n    constructor(termData) {\n        super(termData);\n        this.faces = 6;\n    }\n\n    /* -------------------------------------------- */\n    /** @override */\n    static DENOMINATION = \"6\";\n\n\n    /** @inheritdoc */\n    static MODIFIERS = {\n        \"r\": Die.prototype.reroll,\n        \"rr\": Die.prototype.rerollRecursive,\n        \"k\": Die.prototype.keep,\n        \"kh\": Die.prototype.keep,\n        \"kl\": Die.prototype.keep,\n        \"d\": Die.prototype.drop,\n        \"dh\": Die.prototype.drop,\n        \"dl\": Die.prototype.drop\n    }\n\n    /* -------------------------------------------- */\n    /** @override */\n    get formula() {\n        return `${this.number}${this.constructor.DENOMINATION}${this.modifiers.join(\"\")}`;\n    }\n\n\n    /* -------------------------------------------- */\n    /** @override */\n    evaluate({ minimize = false, maximize = false } = {}) {\n        if (this._evaluated) {\n            throw new Error(`This ${this.constructor.name} has already been evaluated and is immutable`);\n        }\n\n        // Roll the initial number of dice\n        for (let n = 1; n <= this.number; n++) {\n            this.roll({ minimize, maximize });\n        }\n\n        // Apply modifiers\n        this._evaluateModifiers();\n\n        this._evaluated = true;\n        this._isMarvel = true;\n        return this;\n    }\n    roll(options) {\n        const roll = super.roll(options);\n        roll.MARVEL_MULTIVERSE = CONFIG.MARVEL_MULTIVERSE.DICE_RESULTS[roll.result];\n        return roll;\n    }\n\n    /* -------------------------------------------- */\n    /** @override */\n    getResultLabel(result) {\n        const die = CONFIG.MARVEL_MULTIVERSE.DICE_RESULTS[result.result];\n        return `<img src='${die.image}' title='${game.i18n.localize(die.label)}' alt=''/>`;\n    }\n}\n","/**\n * Extend the base Roll document by defining a pool for evaluating rolls with the Marvel DiceTerms.\n * @extends {Roll}\n */\nexport class MarvelMultiverseRoll extends Roll {\n    constructor(formula, data, options) {\n        super(formula, data, options);\n        //additional hook to change options and configuration\n        this.MARVEL_MULTIVERSE = { };\n        this.terms = this.parseShortHand(this.terms);\n        if ( !this.options.configured ) this.configureModifiers();\n        this.hasMARVEL_MULTIVERSE = false;\n    }\n\n\n\n    /* -------------------------------------------- */\n\n    /**\n     * Create a MarvelMultiverseRoll from a standard Roll instance.\n     * @param {Roll} roll\n     * @returns {MarvelMultiverseRoll}\n     */\n    static fromRoll(roll) {\n        const newRoll = new this(roll.formula, roll.data, roll.options);\n        Object.assign(newRoll, roll);\n        return newRoll;\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Determine whether a d616 roll should be fast-forwarded, and whether advantage or disadvantage should be applied.\n     * @param {object} [options]\n     * @param {Event} [options.event]                               The Event that triggered the roll.\n     * @param {boolean} [options.edge]                         Is something granting this roll advantage?\n     * @param {boolean} [options.trouble]                      Is something granting this roll disadvantage?\n     * @param {boolean} [options.fastForward]                       Should the roll dialog be skipped?\n     * @returns {{edgeMode: MarvelMultiverseRoll.EDGE_MODE, isFF: boolean}}  Whether the roll is fast-forwarded, and its advantage\n     *                                                              mode.\n     */\n    static determineEdgeMode({event, edge=false, trouble=false, fastForward}={}) {\n        const isFF = fastForward ?? (event?.shiftKey || event?.altKey || event?.ctrlKey || event?.metaKey);\n        let edgeMode = this.EDGE_MODE.NORMAL;\n        if ( edge || event?.altKey ) edgeMode = this.EDGE_MODE.EDGE;\n        else if ( trouble || event?.ctrlKey || event?.metaKey ) edgeMode = this.EDGE_MODE.TROUBLE;\n        return {isFF: !!isFF, edgeMode};\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Edge mode of a mmrpg d616 roll\n     * @enum {number}\n     */\n    static EDGE_MODE = {\n        NORMAL: 0,\n        EDGE: 1,\n        TROUBLE: -1\n    };\n\n    /* -------------------------------------------- */\n\n    /**\n     * The HTML template path used to configure evaluation of this Roll\n     * @type {string}\n     */\n    static EVALUATION_TEMPLATE = \"systems/marvel-multiverse/templates/chat/roll-dialog.hbs\";\n\n\n    /**\n     * The  template path used to Roll in chat\n     * @type {string}\n     */\n    static CHAT_TEMPLATE = \"systems/marvel-multiverse/templates/dice/roll.hbs\"\n    /* -------------------------------------------- */\n\n    /**\n     * Does this roll start with a d6 or dm?\n     * @type {boolean}\n     */\n    get validD616Roll() {\n        return (this.terms[0] instanceof Die) && (this.terms[0].faces === 6);\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * A convenience reference for whether this marvel or d6 Roll has edge\n     * @type {boolean}\n     */\n    get hasEdge() {\n        return this.options.edgeMode === MarvelMultiverseRoll.EDGE_MODE.EDGE;\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * A convenience reference for whether this marvel or d6 Roll has trouble\n     * @type {boolean}\n     */\n    get hasTrouble() {\n        return this.options.edgeMode === MarvelMultiverseRoll.EDGE_MODE.TROUBLE;\n    }\n\n\n    /**\n     * Is this roll a fantastic result? Returns undefined if roll isn't evaluated.\n     * @type {boolean|void}\n     */\n    get isFantastic() {\n        if ( !this.validD616Roll || !this._evaluated ) return undefined;\n        if ( !Number.isNumeric(this.options.fantastic) ) return false;\n        if ( this.options.fantastic ) MARVEL_MULTIVERSE.options.fantastic = this.options.fantastic;\n        return this.dice[0].total >= this.options.fantastic;\n    }\n\n\n    /* -------------------------------------------- */\n    /*  D616 Roll Methods                            */\n    /* -------------------------------------------- */\n\n    /**\n     * Apply optional modifiers which customize the behavior of the d616term\n     * @private\n     */\n    configureModifiers() {\n        const d616 = this.terms[0];\n        d616.modifiers = [];\n\n         // Handle Advantage or Disadvantage\n        if ( this.hasEdge ) {\n            d616.number = 2;\n            d616.modifiers.push(\"kh\");\n            d616.options.edge = true;\n        }\n        else if ( this.hasTrouble ) {\n            d616.number = 2;\n            d616.modifiers.push(\"kl\");\n            d616.options.trouble = true;\n        }\n        else d616.number = 1;\n        // Mark configuration as complete\n          this.options.configured = true;\n    }\n\n\n\n    /** @inheritdoc */\n    async toMessage(messageData={}, options={}) {\n\n        // Evaluate the roll now so we have the results available to determine whether reliable talent came into play\n        if ( !this._evaluated ) await this.evaluate({async: true});\n\n        // Add appropriate edge mode message flavor and mmrpg roll flags\n        messageData.flavor = messageData.flavor || this.options.flavor;\n        if ( this.hasEdge ) messageData.flavor += ` (${game.i18n.localize(\"MARVEL_MULTIVERSE.edge\")})`;\n        else if ( this.hasTrouble ) messageData.flavor += ` (${game.i18n.localize(\"MARVEL_MULTIVERSE.trouble\")})`;\n\n        // Record the preferred rollMode\n        options.rollMode = options.rollMode ?? this.options.rollMode;\n        return super.toMessage(messageData, options);\n    }\n\n    \n    /* -------------------------------------------- */\n    /** @override */\n    evaluate({ minimize = false, maximize = false } = {}) {\n        if (this._evaluated) throw new Error(\"This Roll object has already been rolled.\");\n\n        // Step 0 - is this rolling nothing?\n        if(this.terms.length == 0) {\n            this._evaluated = true\n            this._total = 0\n            return this\n        }\n        // Step 1 - evaluate any inner Rolls and recompile the formula\n        let hasInner = false;\n        this.terms = this.terms.map((t) => {\n            if (t instanceof MarvelMultiverseRoll) {\n                hasInner = true;\n                t.evaluate({ minimize, maximize });\n                if(t.result === 1){\n                    t._total = 6\n                }\n                this._dice = this._dice.concat(t.dice);\n                return `${t.total}`;\n            }\n            return t;\n        });\n\n        // Step 2 - if inner rolls occurred, re-compile the formula and re-identify terms\n        if (hasInner) {\n            const formula = this.constructor.cleanFormula(this.terms);\n            this.terms = this._identifyTerms(formula);\n        }\n\n        // Step 3 - evaluate any remaining terms and return any non-MMRPG dice to the total.\n        this.results = this.terms.map((term) => {\n            if (!game.system.diceterms.includes(term.constructor)) {\n                if (term.evaluate) {\n                    if (!(term instanceof OperatorTerm)) this.hasStandard = true;\n                    return term.evaluate({ minimize, maximize }).total;\n                } else return term;\n            } else {\n                if (term.evaluate) term.evaluate({ minimize, maximize });\n                this.hasMARVEL_MULTIVERSE = true;\n                return 0;\n            }\n        });\n        return this;\n    }\n\n    //If the main parser hands back a StringTerm attempt to turn it into a die.\n    parseShortHand(terms) {\n        return terms\n        .flatMap(t => {\n            if(!(t instanceof StringTerm) || /\\d/.test(t.term))\n            return t;\n\n            return t.term.replaceAll('d', 'i').split('').reduce((acc, next) => {\n            if(next in CONFIG.Dice.terms)\n            {\n                let cls = CONFIG.Dice.terms[next];\n                acc.push(new cls(1));\n            }\n            else throw new Error(`Unknown die type '${next}'`)\n\n            return acc;\n            }, [])\n        })\n        .flatMap((value, index, array) => //Put addition operators between each die.\n            array.length - 1 !== index\n            ? [value, new OperatorTerm({operator: '+'})]\n            : value)\n    }\n\n\n\n    /* -------------------------------------------- */\n    /*  Configuration Dialog                        */\n    /* -------------------------------------------- */\n\n    /**\n     * Create a Dialog prompt used to configure evaluation of an existing MarvelMultiverseRoll instance.\n     * @param {object} data                     Dialog configuration data\n     * @param {string} [data.title]             The title of the shown dialog window\n     * @param {number} [data.defaultRollMode]   The roll mode that the roll mode select element should default to\n     * @param {number} [data.defaultAction]     The button marked as default\n     * @param {boolean} [data.chooseModifier]   Choose which ability modifier should be applied to the roll?\n     * @param {string} [data.defaultAbility]    For tool rolls, the default ability modifier applied to the roll\n     * @param {string} [data.template]          A custom path to an HTML template to use instead of the default\n     * @param {object} options                  Additional Dialog customization options\n     * @returns {Promise<MarvelMultiverseRoll|null>}         A resulting MarvelMultiverseRoll object constructed with the dialog, or null if the\n     *                                          dialog was closed\n     */\n    async configureDialog({title, defaultRollMode, defaultAction=MarvelMultiverseRoll.EDGE_MODE.NORMAL, chooseModifier=false,\n        defaultAbility, template}={}, options={}) {\n\n        // Render the Dialog inner HTML\n        const content = await renderTemplate(template ?? this.constructor.EVALUATION_TEMPLATE, {\n            formulas: [{formula: `${this.formula} + @bonus`}],\n            defaultRollMode,\n            rollModes: CONFIG.Dice.rollModes,\n            chooseModifier,\n            defaultAbility,\n            abilities: CONFIG.MARVEL_MULTIVERSE.abilities\n        });\n\n        let defaultButton = \"normal\";\n        switch ( defaultAction ) {\n            case MarvelMultiverseRoll.EDGE_MODE.EDGE: defaultButton = \"edge\"; break;\n            case MarvelMultiverseRoll.EDGE_MODE.TROUBLE: defaultButton = \"trouble\"; break;\n        }\n\n        // Create the Dialog window and await submission of the form\n        return new Promise(resolve => {\n        new Dialog({\n            title,\n            content,\n            buttons: {\n            edge: {\n                label: game.i18n.localize(\"MARVEL_MULTIVERSE.edge\"),\n                callback: html => resolve(this._onDialogSubmit(html, MarvelMultiverseRoll.EDGE_MODE.EDGE))\n            },\n            normal: {\n                label: game.i18n.localize(\"MARVEL_MULTIVERSE.Normal\"),\n                callback: html => resolve(this._onDialogSubmit(html, MarvelMultiverseRoll.EDGE_MODE.NORMAL))\n            },\n            trouble: {\n                label: game.i18n.localize(\"MARVEL_MULTIVERSE.trouble\"),\n                callback: html => resolve(this._onDialogSubmit(html, MarvelMultiverseRoll.EDGE_MODE.TROUBLE))\n            }\n            },\n            default: defaultButton,\n            close: () => resolve(null)\n        }, options).render(true);\n        });\n    }\n\n    /* -------------------------------------------- */\n\n    /**\n     * Handle submission of the Roll evaluation configuration Dialog\n     * @param {jQuery} html            The submitted dialog content\n     * @param {number} edgeMode   The chosen edge mode\n     * @returns {MarvelMultiverseRoll}              This damage roll.\n     * @private\n     */\n    _onDialogSubmit(html, edgeMode) {\n        const form = html[0].querySelector(\"form\");\n\n        // Append a situational bonus term\n        if ( form.bonus.value ) {\n            const bonus = new Roll(form.bonus.value, this.data);\n            if ( !(bonus.terms[0] instanceof OperatorTerm) ) this.terms.push(new OperatorTerm({operator: \"+\"}));\n            this.terms = this.terms.concat(bonus.terms);\n        }\n\n        // Customize the modifier\n        if ( form.ability?.value ) {\n            const abl = this.data.abilities[form.ability.value];\n            this.terms = this.terms.flatMap(t => {\n                if ( t.term === \"@mod\" ) return new NumericTerm({number: abl.value});\n                if ( t.term === \"@abilityCheckBonus\" ) {\n                    const bonus = abl.bonuses?.check;\n                    if ( bonus ) return new Roll(bonus, this.data).terms;\n                    return new NumericTerm({number: 0});\n                }\n                return t;\n            });\n            this.options.flavor += ` (${CONFIG.MARVEL_MULTIVERSE.abilities[form.ability.value]?.label ?? \"\"})`;   \n        }\n\n        // Apply advantage or disadvantage\n        this.options.advantageMode = advantageMode;\n        this.options.rollMode = form.rollMode.value;\n        this.configureModifiers();\n        return this;\n    }\n}","// Import document classes.\nimport { MarvelMultiverseActor } from './module/documents/actor.mjs';\nimport { MarvelMultiverseItem } from './module/documents/item.mjs';\n// Import sheet classes.\nimport { MarvelMultiverseActorSheet } from './module/sheets/actor-sheet.mjs';\nimport { MarvelMultiverseItemSheet } from './module/sheets/item-sheet.mjs';\n// Import helper/utility classes and constants.\nimport { preloadHandlebarsTemplates } from './module/helpers/templates.mjs';\nimport { MARVEL_MULTIVERSE } from './module/helpers/config.mjs';\n// Import DataModel classes\nimport * as models from './module/data/_module.mjs';\nimport * as dice from \"./module/dice/_module.mjs\";\n\n/* -------------------------------------------- */\n/*  Init Hook                                   */\n/* -------------------------------------------- */\n\nHooks.once('init', function () {\n  // Add utility classes to the global game object so that they're more easily\n  // accessible in global contexts.\n  game.MarvelMultiverse = {\n    MarvelMultiverseActor,\n    MarvelMultiverseItem,\n    rollItemMacro,\n  };\n\n  // Add custom constants for configuration.\n  CONFIG.MARVEL_MULTIVERSE = MARVEL_MULTIVERSE;\n\n  /**\n   * Set an initiative formula for the system\n   * @type {String}\n   */\n  CONFIG.Combat.initiative = {\n    formula: '1d20 + @abilities.vig.mod',\n    decimals: 2,\n  };\n\n  // Define custom Document and DataModel classes\n  CONFIG.Actor.documentClass = MarvelMultiverseActor;\n\n  // Note that you don't need to declare a DataModel\n  // for the base actor/item classes - they are included\n  // with the Character/NPC as part of super.defineSchema()\n  CONFIG.Actor.dataModels = {\n    character: models.MarvelMultiverseCharacter,\n    npc: models.MarvelMultiverseNPC\n  }\n  CONFIG.Item.documentClass = MarvelMultiverseItem;\n  CONFIG.Item.dataModels = {\n    item: models.MarvelMultiverseItem,\n    trait: models.MarvelMultiverseTrait,\n    origin: models.MarvelMultiverseOrigin,\n    occupation: models.MarvelMultiverseOccupation,\n    tag: models.MarvelMultiverseTag,\n    tag: models.MarvelMultiverseTag,\n    power: models.MarvelMultiversePower\n  }\n\n  // Active Effects are never copied to the Actor,\n  // but will still apply to the Actor from within the Item\n  // if the transfer property on the Active Effect is true.\n  CONFIG.ActiveEffect.legacyTransferral = false;\n\n\n  CONFIG.Dice.types.push(dice.MarvelDie);\n  CONFIG.Dice.terms[dice.MarvelDie.DENOMINATION] = dice.MarvelDie;\n\n  CONFIG.Dice.types.push(dice.SixSidedDie);\n  CONFIG.Dice.terms[dice.SixSidedDie.DENOMINATION] = dice.SixSidedDie;\n  Roll.TOOLTIP_TEMPLATE = \"systems/marvel-multiverse/templates/chat/roll-breakdown.hbs\";\n  CONFIG.Dice.MarvelMultiverseRoll = dice.MarvelMultiverseRoll;\n\n  // Add fonts\n  _configureFonts();\n\n  // Register sheet application classes\n  Actors.unregisterSheet('core', ActorSheet);\n  Actors.registerSheet('marvel-multiverse', MarvelMultiverseActorSheet, {\n    makeDefault: true,\n    label: 'MARVEL_MULTIVERSE.SheetLabels.Actor',\n  });\n  Items.unregisterSheet('core', ItemSheet);\n  Items.registerSheet('marvel-multiverse', MarvelMultiverseItemSheet, {\n    makeDefault: true,\n    label: 'MARVEL_MULTIVERSE.SheetLabels.Item',\n  });\n\n  // Preload Handlebars templates.\n  return preloadHandlebarsTemplates();\n});\n\n/* -------------------------------------------- */\n/*  Handlebars Helpers                          */\n/* -------------------------------------------- */\n\n// If you need to add Handlebars helpers, here is a useful example:\nHandlebars.registerHelper('toLowerCase', function (mel) {\n  return mel.toLowerCase();\n});\n\n\n/* -------------------------------------------- */\n\n/**\n * Configure additional system fonts.\n */\nfunction _configureFonts() {\n  Object.assign(CONFIG.fontDefinitions, {\n    Roboto: {\n      editor: true,\n      fonts: [\n        { urls: [\"systems/marvel-multiverse/fonts/roboto/Roboto-Regular.woff2\"] },\n        { urls: [\"systems/marvel-multiverse/fonts/roboto/Roboto-Bold.woff2\"], weight: \"bold\" },\n        { urls: [\"systems/marvel-multiverse/fonts/roboto/Roboto-Italic.woff2\"], style: \"italic\" },\n        { urls: [\"systems/marvel-multiverse/fonts/roboto/Roboto-BoldItalic.woff2\"], weight: \"bold\", style: \"italic\" }\n      ]\n    },\n    \"Roboto Condensed\": {\n      editor: true,\n      fonts: [\n        { urls: [\"systems/marvel-multiverse/fonts/roboto-condensed/RobotoCondensed-Regular.woff2\"] },\n        { urls: [\"systems/marvel-multiverse/fonts/roboto-condensed/RobotoCondensed-Bold.woff2\"], weight: \"bold\" },\n        { urls: [\"systems/marvel-multiverse/fonts/roboto-condensed/RobotoCondensed-Italic.woff2\"], style: \"italic\" },\n        {\n          urls: [\"systems/marvel-multiverse/fonts/roboto-condensed/RobotoCondensed-BoldItalic.woff2\"], weight: \"bold\",\n          style: \"italic\"\n        }\n      ]\n    },\n    \"Roboto Slab\": {\n      editor: true,\n      fonts: [\n        { urls: [\"systems/marvel-multiverse/fonts/roboto-slab/RobotoSlab-Regular.ttf\"] },\n        { urls: [\"systems/marvel-multiverse/fonts/roboto-slab/RobotoSlab-Bold.ttf\"], weight: \"bold\" }\n      ]\n    }\n  });\n}\n\n\n\n/* -------------------------------------------- */\n/*  Ready Hook                                  */\n/* -------------------------------------------- */\n\nHooks.once('ready', function () {\n  // Wait to register hotbar drop hook on ready so that modules could register earlier if they want to\n  Hooks.on('hotbarDrop', (bar, data, slot) => createItemMacro(data, slot));\n});\n\n/* -------------------------------------------- */\n/*  Hotbar Macros                               */\n/* -------------------------------------------- */\n\n/**\n * Create a Macro from an Item drop.\n * Get an existing item macro if one exists, otherwise create a new one.\n * @param {Object} data     The dropped data\n * @param {number} slot     The hotbar slot to use\n * @returns {Promise}\n */\nasync function createItemMacro(data, slot) {\n  // First, determine if this is a valid owned item.\n  if (data.type !== 'Item') return;\n  if (!data.uuid.includes('Actor.') && !data.uuid.includes('Token.')) {\n    return ui.notifications.warn(\n      'You can only create macro buttons for owned Items'\n    );\n  }\n  // If it is, retrieve it based on the uuid.\n  const item = await Item.fromDropData(data);\n\n  // Create the macro command using the uuid.\n  const command = `game.MarvelMultiverse.rollItemMacro(\"${data.uuid}\");`;\n  let macro = game.macros.find(\n    (m) => m.name === item.name && m.command === command\n  );\n  if (!macro) {\n    macro = await Macro.create({\n      name: item.name,\n      type: 'script',\n      img: item.img,\n      command: command,\n      flags: { 'marvel-multiverse.itemMacro': true },\n    });\n  }\n  game.user.assignHotbarMacro(macro, slot);\n  return false;\n}\n\n/**\n * Create a Macro from an Item drop.\n * Get an existing item macro if one exists, otherwise create a new one.\n * @param {string} itemUuid\n */\nfunction rollItemMacro(itemUuid) {\n  // Reconstruct the drop data so that we can load the item.\n  const dropData = {\n    type: 'Item',\n    uuid: itemUuid,\n  };\n  // Load the item from the uuid.\n  Item.fromDropData(dropData).then((item) => {\n    // Determine if the item loaded and if it's an owned item.\n    if (!item || !item.parent) {\n      const itemName = item?.name ?? itemUuid;\n      return ui.notifications.warn(\n        `Could not find item ${itemName}. You may need to delete and recreate this macro.`\n      );\n    }\n\n    // Trigger the item roll\n    item.roll();\n  });\n}\n"],"names":["MARVEL_MULTIVERSE","MarvelMultiverseItem","models.MarvelMultiverseCharacter","models.MarvelMultiverseNPC","models.MarvelMultiverseItem","models.MarvelMultiverseTrait","models.MarvelMultiverseOrigin","models.MarvelMultiverseOccupation","models.MarvelMultiverseTag","models.MarvelMultiversePower","dice.MarvelDie","dice.SixSidedDie","dice.MarvelMultiverseRoll"],"mappings":"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"}